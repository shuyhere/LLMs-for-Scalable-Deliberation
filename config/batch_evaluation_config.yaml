# Configuration file for batch summary evaluation

# Model configuration for evaluation
evaluation_model:
  name: "gpt-5-nano"  # Model to use for evaluation
  system_prompt: "You are a helpful assistant"  # System prompt for evaluation
  temperature: 1.0

# Input/Output settings
paths:
  results_directory: "results/summary"  # Directory containing summary files
  output_directory: "results/summary"   # Directory to save evaluation results
  datasets_directory: "datasets"        # Directory containing original datasets

# Evaluation settings
evaluation:
  # Summary types to evaluate (in order of preference)
  summary_types: ["main_points", "topic_modeling", "custom_analysis"]
  
  # Comment sampling settings
  comment_sampling:
    # Maximum comments to evaluate per dataset (null = all comments used in summary)
    max_comments_per_dataset: 5
    
    # Sampling strategy: "random", "first_n", "last_n", "stratified"
    sampling_strategy: "first_n"
    
    # Whether to sample from comments used in summary (comment_indices) or all original comments
    sample_from_summary_comments: true
    
    # Random seed for reproducible sampling (only used with "random" strategy)
    random_seed: 42
  
  # Whether to skip datasets with disabled summary types
  skip_disabled_summaries: true
  
  # Save detailed evaluation results for each comment
  save_detailed_results: true
  
  # Include evaluation statistics
  include_statistics: true

# Processing settings
processing:
  # Process datasets in parallel (not recommended for API rate limits)
  parallel: false
  
  # Number of datasets to process before saving results
  batch_size: 1
  
  # Retry failed evaluations
  retry_failed: true
  
  # Maximum number of retry attempts
  max_retries: 3
  
  # Delay between API calls (seconds)
  api_delay: 1.0

# Output format
output:
  # File prefix for evaluation files
  file_prefix: "eva_summary_"
  
  # Include original summary data in evaluation files
  include_original_data: true
  
  # Include evaluation metadata
  include_metadata: true
  
  # Pretty print JSON output
  pretty_print: true
